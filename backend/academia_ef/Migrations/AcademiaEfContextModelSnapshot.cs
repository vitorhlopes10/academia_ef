// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using academia_ef.Context;

#nullable disable

namespace academia_ef.Migrations
{
    [DbContext(typeof(AcademiaEfContext))]
    partial class AcademiaEfContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("academia_ef.Model.Academia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco")
                        .IsUnique();

                    b.ToTable("Academia", (string)null);
                });

            modelBuilder.Entity("academia_ef.Model.AcordoMensalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DiaDataVencimento")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusMensalidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdStatusMensalidade");

                    b.ToTable("AcordoMensalidade", (string)null);
                });

            modelBuilder.Entity("academia_ef.Model.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdAcademia")
                        .HasColumnType("int");

                    b.Property<int>("IdAcordoMensalidade")
                        .HasColumnType("int");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int");

                    b.Property<int>("IdPlano")
                        .HasColumnType("int");

                    b.Property<int>("IdSexo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdAcademia")
                        .IsUnique();

                    b.HasIndex("IdAcordoMensalidade")
                        .IsUnique();

                    b.HasIndex("IdEndereco")
                        .IsUnique();

                    b.HasIndex("IdPlano");

                    b.HasIndex("IdSexo");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Aluno", (string)null);
                });

            modelBuilder.Entity("academia_ef.Model.AvaliacaoFisica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Abdomen")
                        .HasColumnType("float");

                    b.Property<double>("Altura")
                        .HasColumnType("float");

                    b.Property<double>("Antebraco")
                        .HasColumnType("float");

                    b.Property<double>("Cintura")
                        .HasColumnType("float");

                    b.Property<double>("Coxa")
                        .HasColumnType("float");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<int>("IdBiotipo")
                        .HasColumnType("int");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<double>("Imc")
                        .HasColumnType("float");

                    b.Property<double>("LarguraBracoContraido")
                        .HasColumnType("float");

                    b.Property<double>("LarguraBracoRelaxado")
                        .HasColumnType("float");

                    b.Property<double>("LarguraEntreOmbros")
                        .HasColumnType("float");

                    b.Property<double>("Panturrilha")
                        .HasColumnType("float");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<double>("Quadril")
                        .HasColumnType("float");

                    b.Property<double>("Torax")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdAluno");

                    b.HasIndex("IdBiotipo");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("AvaliacaoFisica", (string)null);
                });

            modelBuilder.Entity("academia_ef.Model.Biotipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Biotipo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Tipo = "Ectomorfo"
                        },
                        new
                        {
                            Id = 2,
                            Tipo = "Mesomorfo"
                        },
                        new
                        {
                            Id = 3,
                            Tipo = "Endomorfo"
                        });
                });

            modelBuilder.Entity("academia_ef.Model.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Cargo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Instrutor"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Atendente"
                        });
                });

            modelBuilder.Entity("academia_ef.Model.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("academia_ef.Model.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Fixo")
                        .HasColumnType("bit");

                    b.Property<int>("IdAcademia")
                        .HasColumnType("int");

                    b.Property<int>("IdCargo")
                        .HasColumnType("int");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int");

                    b.Property<int>("IdSexo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdAcademia")
                        .IsUnique();

                    b.HasIndex("IdCargo");

                    b.HasIndex("IdEndereco")
                        .IsUnique();

                    b.HasIndex("IdSexo");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("academia_ef.Model.PagamentoMensalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAcordoMensalidade")
                        .HasColumnType("int");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("ValorPago")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdAcordoMensalidade");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("PagamentoMensalidade", (string)null);
                });

            modelBuilder.Entity("academia_ef.Model.Plano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DescricaoRegras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Plano", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescricaoRegras = "Dá acesso apenas a uma das unidades da Equilíbrio Fitness",
                            Nome = "Essential",
                            Valor = 80.0
                        },
                        new
                        {
                            Id = 2,
                            DescricaoRegras = "Dá acesso a todas as unidades da Equilíbrio Fitness",
                            Nome = "Premiun",
                            Valor = 100.0
                        });
                });

            modelBuilder.Entity("academia_ef.Model.Sexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Sexo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Masculino"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Feminino"
                        });
                });

            modelBuilder.Entity("academia_ef.Model.StatusMensalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("StatusMensalidade", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Em Aberto"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Pago"
                        });
                });

            modelBuilder.Entity("academia_ef.Model.StatusUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("StatusUsuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Ativo"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Inativo"
                        });
                });

            modelBuilder.Entity("academia_ef.Model.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAluno");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Treino", (string)null);
                });

            modelBuilder.Entity("academia_ef.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdStatusUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdStatusUsuario");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("academia_ef.Model.Academia", b =>
                {
                    b.HasOne("academia_ef.Model.Endereco", "Endereco")
                        .WithOne("Academia")
                        .HasForeignKey("academia_ef.Model.Academia", "IdEndereco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("academia_ef.Model.AcordoMensalidade", b =>
                {
                    b.HasOne("academia_ef.Model.StatusMensalidade", "StatusMensalidade")
                        .WithMany("AcordoMensalidade")
                        .HasForeignKey("IdStatusMensalidade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StatusMensalidade");
                });

            modelBuilder.Entity("academia_ef.Model.Aluno", b =>
                {
                    b.HasOne("academia_ef.Model.Academia", "Academia")
                        .WithOne("Aluno")
                        .HasForeignKey("academia_ef.Model.Aluno", "IdAcademia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.AcordoMensalidade", "AcordoMensalidade")
                        .WithOne("Aluno")
                        .HasForeignKey("academia_ef.Model.Aluno", "IdAcordoMensalidade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Endereco", "Endereco")
                        .WithOne("Aluno")
                        .HasForeignKey("academia_ef.Model.Aluno", "IdEndereco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Plano", "Plano")
                        .WithMany("Alunos")
                        .HasForeignKey("IdPlano")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Sexo", "Sexo")
                        .WithMany("Alunos")
                        .HasForeignKey("IdSexo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Usuario", "Usuario")
                        .WithOne("Aluno")
                        .HasForeignKey("academia_ef.Model.Aluno", "IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Academia");

                    b.Navigation("AcordoMensalidade");

                    b.Navigation("Endereco");

                    b.Navigation("Plano");

                    b.Navigation("Sexo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("academia_ef.Model.AvaliacaoFisica", b =>
                {
                    b.HasOne("academia_ef.Model.Aluno", "Aluno")
                        .WithMany("AvaliacoesFisica")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Biotipo", "Biotipo")
                        .WithMany("AvaliacoesFisica")
                        .HasForeignKey("IdBiotipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Funcionario", "Funcionario")
                        .WithMany("AvaliacoesFisica")
                        .HasForeignKey("IdFuncionario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Biotipo");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("academia_ef.Model.Funcionario", b =>
                {
                    b.HasOne("academia_ef.Model.Academia", "Academia")
                        .WithOne("Funcionario")
                        .HasForeignKey("academia_ef.Model.Funcionario", "IdAcademia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Cargo", "Cargo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdCargo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Endereco", "Endereco")
                        .WithOne("Funcionario")
                        .HasForeignKey("academia_ef.Model.Funcionario", "IdEndereco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Sexo", "Sexo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdSexo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Usuario", "Usuario")
                        .WithOne("Funcionario")
                        .HasForeignKey("academia_ef.Model.Funcionario", "IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Academia");

                    b.Navigation("Cargo");

                    b.Navigation("Endereco");

                    b.Navigation("Sexo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("academia_ef.Model.PagamentoMensalidade", b =>
                {
                    b.HasOne("academia_ef.Model.AcordoMensalidade", "AcordoMensalidade")
                        .WithMany("PagamentosMensalidades")
                        .HasForeignKey("IdAcordoMensalidade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Funcionario", "Funcionario")
                        .WithMany("PagamentosMensalidades")
                        .HasForeignKey("IdFuncionario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AcordoMensalidade");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("academia_ef.Model.Treino", b =>
                {
                    b.HasOne("academia_ef.Model.Aluno", "Aluno")
                        .WithMany("Treinos")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("academia_ef.Model.Funcionario", "Funcionario")
                        .WithMany("Treinos")
                        .HasForeignKey("IdFuncionario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("academia_ef.Model.Usuario", b =>
                {
                    b.HasOne("academia_ef.Model.StatusUsuario", "StatusUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdStatusUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StatusUsuario");
                });

            modelBuilder.Entity("academia_ef.Model.Academia", b =>
                {
                    b.Navigation("Aluno")
                        .IsRequired();

                    b.Navigation("Funcionario")
                        .IsRequired();
                });

            modelBuilder.Entity("academia_ef.Model.AcordoMensalidade", b =>
                {
                    b.Navigation("Aluno")
                        .IsRequired();

                    b.Navigation("PagamentosMensalidades");
                });

            modelBuilder.Entity("academia_ef.Model.Aluno", b =>
                {
                    b.Navigation("AvaliacoesFisica");

                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("academia_ef.Model.Biotipo", b =>
                {
                    b.Navigation("AvaliacoesFisica");
                });

            modelBuilder.Entity("academia_ef.Model.Cargo", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("academia_ef.Model.Endereco", b =>
                {
                    b.Navigation("Academia")
                        .IsRequired();

                    b.Navigation("Aluno")
                        .IsRequired();

                    b.Navigation("Funcionario")
                        .IsRequired();
                });

            modelBuilder.Entity("academia_ef.Model.Funcionario", b =>
                {
                    b.Navigation("AvaliacoesFisica");

                    b.Navigation("PagamentosMensalidades");

                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("academia_ef.Model.Plano", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("academia_ef.Model.Sexo", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("academia_ef.Model.StatusMensalidade", b =>
                {
                    b.Navigation("AcordoMensalidade");
                });

            modelBuilder.Entity("academia_ef.Model.StatusUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("academia_ef.Model.Usuario", b =>
                {
                    b.Navigation("Aluno")
                        .IsRequired();

                    b.Navigation("Funcionario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
